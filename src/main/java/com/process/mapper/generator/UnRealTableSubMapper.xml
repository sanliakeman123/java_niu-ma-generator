<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.process.dao.generator.UnRealTableSubDao">
<!-- 牛马 工具生成 -->
  <resultMap id="BaseResultMap" type="com.process.entity.generator.UnRealTableSub"> 
    <id column="id" jdbcType="INTEGER" property="id" />     
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="un_real_table_uuid" jdbcType="VARCHAR" property="unRealTableUuid" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="real_table_uuid" jdbcType="VARCHAR" property="realTableUuid" />
    <result column="join_field_uuid" jdbcType="VARCHAR" property="joinFieldUuid" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="self_field_uuid" jdbcType="VARCHAR" property="selfFieldUuid" />
    
  </resultMap>
<!--  -->
  <sql id="Base_Column_List">
      `alias` ,
      `weight` ,
      `id` ,
      `un_real_table_uuid` ,
      `uuid` ,
      `real_table_uuid` ,
      `join_field_uuid` ,
      `order` ,
      `self_field_uuid` 
  </sql>
  <sql id="orderBy">
    ORDER BY `order` DESC
  </sql>
<!-- and basis_name like CONCAT("%", #{expert.basisName,jdbcType=VARCHAR}, "%")-->
  <sql id="wherePage">
    <where>
      <if test="entity != null"> 
        <if test="entity.alias != null">
          AND `alias`=#{entity.alias,jdbcType=VARCHAR}
        </if>

        <if test="entity.weight != null">
          AND `weight`=#{entity.weight,jdbcType=INTEGER}
        </if>


        <if test="entity.unRealTableUuid != null">
          AND `un_real_table_uuid`=#{entity.unRealTableUuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.uuid != null">
          AND `uuid`=#{entity.uuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.realTableUuid != null">
          AND `real_table_uuid`=#{entity.realTableUuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.joinFieldUuid != null">
          AND `join_field_uuid`=#{entity.joinFieldUuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.order != null">
          AND `order`=#{entity.order,jdbcType=INTEGER}
        </if>

        <if test="entity.selfFieldUuid != null">
          AND `self_field_uuid`=#{entity.selfFieldUuid,jdbcType=VARCHAR}
        </if>

      </if>
    </where>
  </sql>

  <sql id="limit">
    limit #{page.offset,jdbcType=INTEGER} , #{page.pageSize,jdbcType=INTEGER}
  </sql>
  <sql id="setUpdate">
    <set> 
        <if test="alias != null">
          `alias` = #{alias,jdbcType=VARCHAR},
        </if> 
        <if test="weight != null">
          `weight` = #{weight,jdbcType=INTEGER},
        </if> 
        <if test="unRealTableUuid != null">
          `un_real_table_uuid` = #{unRealTableUuid,jdbcType=VARCHAR},
        </if> 
        <if test="uuid != null">
          `uuid` = #{uuid,jdbcType=VARCHAR},
        </if> 
        <if test="realTableUuid != null">
          `real_table_uuid` = #{realTableUuid,jdbcType=VARCHAR},
        </if> 
        <if test="joinFieldUuid != null">
          `join_field_uuid` = #{joinFieldUuid,jdbcType=VARCHAR},
        </if> 
        <if test="order != null">
          `order` = #{order,jdbcType=INTEGER},
        </if> 
        <if test="selfFieldUuid != null">
          `self_field_uuid` = #{selfFieldUuid,jdbcType=VARCHAR},
        </if> 
    </set>
  </sql>
<!-- list查询  -->
  <select id="selectByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_table_sub
    <include refid="wherePage" /> <include refid="orderBy" />
  </select>
  <!-- count -->
  <select id="count" resultType="long">
    SELECT count(*) FROM un_real_table_sub <include refid="wherePage" />
  </select>
  <!-- list查询分页  -->
  <select id="selectPageByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_table_sub
    <include refid="wherePage" />
    <include refid="orderBy" /> <include refid="limit" />
  </select>
  <sql id="wherePrimaryKey">
    `id` = #{id,jdbcType=INTEGER}
  </sql>
  <!-- 主键查询 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_table_sub WHERE <include refid="wherePrimaryKey" />
  </select>

  <!-- 主键删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM un_real_table_sub WHERE <include refid="wherePrimaryKey" />
  </delete>
  <!-- 根据主键update -->
  <update id="updateByPrimaryKeySelective" parameterType="com.process.entity.generator.UnRealTableSub">
    UPDATE un_real_table_sub
    <include refid="setUpdate" />
    WHERE <include refid="wherePrimaryKey" />
  </update>
<!-- 动态sql插入 -->
  <insert id="insertSelective"    useGeneratedKeys="true" keyProperty="id"   parameterType="com.process.entity.generator.UnRealTableSub">
    INSERT INTO un_real_table_sub
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="alias != null">
        `alias`,
      </if> 
      <if test="weight != null">
        `weight`,
      </if> 
      <if test="unRealTableUuid != null">
        `un_real_table_uuid`,
      </if> 
      <if test="uuid != null">
        `uuid`,
      </if> 
      <if test="realTableUuid != null">
        `real_table_uuid`,
      </if> 
      <if test="joinFieldUuid != null">
        `join_field_uuid`,
      </if> 
      <if test="order != null">
        `order`,
      </if> 
      <if test="selfFieldUuid != null">
        `self_field_uuid`,
      </if> 
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if> 
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if> 
      <if test="unRealTableUuid != null">
        #{unRealTableUuid,jdbcType=VARCHAR},
      </if> 
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if> 
      <if test="realTableUuid != null">
        #{realTableUuid,jdbcType=VARCHAR},
      </if> 
      <if test="joinFieldUuid != null">
        #{joinFieldUuid,jdbcType=VARCHAR},
      </if> 
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if> 
      <if test="selfFieldUuid != null">
        #{selfFieldUuid,jdbcType=VARCHAR},
      </if> 
    </trim>
  </insert>
<!-- 批量插入  -->
  <insert id="insertBatch"   useGeneratedKeys="true" keyProperty="id"   parameterType="java.util.List">
    INSERT INTO un_real_table_sub
    (
      `alias` ,
      `weight` ,
      `id` ,
      `un_real_table_uuid` ,
      `uuid` ,
      `real_table_uuid` ,
      `join_field_uuid` ,
      `order` ,
      `self_field_uuid` 
    )
    VALUES
    <foreach collection ="list" item="item" separator =",">
      (
#{item.alias,jdbcType=VARCHAR},

#{item.weight,jdbcType=INTEGER},

#{item.id,jdbcType=INTEGER},

#{item.unRealTableUuid,jdbcType=VARCHAR},

#{item.uuid,jdbcType=VARCHAR},

#{item.realTableUuid,jdbcType=VARCHAR},

#{item.joinFieldUuid,jdbcType=VARCHAR},

#{item.order,jdbcType=INTEGER},

#{item.selfFieldUuid,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <select id="selectByUnRealTableUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_table_sub WHERE `un_real_table_uuid` = #{unRealTableUuid,jdbcType=VARCHAR} <include refid="orderBy" />
  </select>
  <delete id="deleteByUnRealTableUuid" parameterType="java.lang.String">
    DELETE FROM un_real_table_sub WHERE `un_real_table_uuid` = #{unRealTableUuid,jdbcType=VARCHAR}
  </delete>
  <select id="selectByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_table_sub WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUuid" parameterType="java.lang.String">
    DELETE FROM un_real_table_sub WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </delete>
  <update id="updateByUuid" parameterType="com.process.entity.generator.UnRealTableSub">
    UPDATE un_real_table_sub
    <include refid="setUpdate" />
    WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </update>


</mapper>