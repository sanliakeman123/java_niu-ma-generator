<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.process.dao.generator.DataMetadataDao">
<!-- 牛马 工具生成 -->
  <resultMap id="BaseResultMap" type="com.process.entity.generator.DataMetadata"> 
     <id column="id" jdbcType="INTEGER" property="id" /> 
     <result column="uuid" jdbcType="VARCHAR" property="uuid" />
     <result column="table_uuid" jdbcType="VARCHAR" property="tableUuid" />
     <result column="column_name" jdbcType="VARCHAR" property="columnName" />
     <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
     <result column="is_nullable" jdbcType="VARCHAR" property="isNullable" />
     <result column="column_data_type" jdbcType="VARCHAR" property="columnDataType" />
     <result column="column_max_length" jdbcType="VARCHAR" property="columnMaxLength" />
     <result column="index_name" jdbcType="VARCHAR" property="indexName" />
     <result column="extra" jdbcType="VARCHAR" property="extra" />
     <result column="column_comment" jdbcType="VARCHAR" property="columnComment" />
     <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
     <result column="field_data_type" jdbcType="VARCHAR" property="fieldDataType" />
     <result column="required" jdbcType="VARCHAR" property="required" />
     <result column="primary_key_flag" jdbcType="VARCHAR" property="primaryKeyFlag" />
     <result column="where_type" jdbcType="VARCHAR" property="whereType" />
     <result column="jdbc_type" jdbcType="VARCHAR" property="jdbcType" />
      <result column="selected" jdbcType="INTEGER" property="selected" />
  </resultMap>
<!--  -->
  <sql id="Base_Column_List">
      `id` ,
      `uuid` ,
      `table_uuid` ,
      `column_name` ,
      `default_value` ,
      `is_nullable` ,
      `column_data_type` ,
      `column_max_length` ,
      `index_name` ,
      `extra` ,
      `column_comment` ,
      `field_name` ,
      `field_data_type` ,
      `required` ,
      `primary_key_flag` ,
      `where_type` ,
      `jdbc_type` ,
      `selected`
  </sql>
  <sql id="orderBy">
    ORDER BY `id` DESC
  </sql>
<!-- and basis_name like CONCAT("%", #{expert.basisName,jdbcType=VARCHAR}, "%")-->
  <sql id="wherePage">
    <where>
      <if test="entity != null"> 
        <if test="entity.uuid != null">
          AND `uuid`=#{entity.uuid,jdbcType=VARCHAR}
        </if>
        <if test="entity.tableUuid != null">
          AND `table_uuid`=#{entity.tableUuid,jdbcType=VARCHAR}
        </if>
        <if test="entity.columnName != null">
          AND `column_name` like CONCAT("%", #{entity.columnName,jdbcType=VARCHAR}, "%")
        </if>
        <if test="entity.defaultValue != null">
          AND `default_value`=#{entity.defaultValue,jdbcType=VARCHAR}
        </if>
        <if test="entity.isNullable != null">
          AND `is_nullable`=#{entity.isNullable,jdbcType=VARCHAR}
        </if>
        <if test="entity.columnDataType != null">
          AND `column_data_type`=#{entity.columnDataType,jdbcType=VARCHAR}
        </if>
        <if test="entity.columnMaxLength != null">
          AND `column_max_length`=#{entity.columnMaxLength,jdbcType=VARCHAR}
        </if>
        <if test="entity.indexName != null">
          AND `index_name`=#{entity.indexName,jdbcType=VARCHAR}
        </if>
        <if test="entity.extra != null">
          AND `extra`=#{entity.extra,jdbcType=VARCHAR}
        </if>
        <if test="entity.columnComment != null">
          AND `column_comment`=#{entity.columnComment,jdbcType=VARCHAR}
        </if>
        <if test="entity.fieldName != null">
          AND `field_name`=#{entity.fieldName,jdbcType=VARCHAR}
        </if>
        <if test="entity.fieldDataType != null">
          AND `field_data_type`=#{entity.fieldDataType,jdbcType=VARCHAR}
        </if>
        <if test="entity.required != null">
          AND `required`=#{entity.required,jdbcType=VARCHAR}
        </if>
        <if test="entity.primaryKeyFlag != null">
          AND `primary_key_flag`=#{entity.primaryKeyFlag,jdbcType=VARCHAR}
        </if>
        <if test="entity.whereType != null">
          AND `where_type`=#{entity.whereType,jdbcType=VARCHAR}
        </if>
        <if test="entity.jdbcType != null">
          AND `jdbc_type`=#{entity.jdbcType,jdbcType=VARCHAR}
        </if>
      </if>
    </where>
  </sql>
  <sql id="limit">
    limit #{page.offset,jdbcType=INTEGER} , #{page.pageSize,jdbcType=INTEGER}
  </sql>
  <sql id="setUpdate">
    <set> 
        <if test="uuid != null">
          `uuid` = #{uuid,jdbcType=VARCHAR},
        </if> 
        <if test="tableUuid != null">
          `table_uuid` = #{tableUuid,jdbcType=VARCHAR},
        </if> 
        <if test="columnName != null">
          `column_name` = #{columnName,jdbcType=VARCHAR},
        </if> 
        <if test="defaultValue != null">
          `default_value` = #{defaultValue,jdbcType=VARCHAR},
        </if> 
        <if test="isNullable != null">
          `is_nullable` = #{isNullable,jdbcType=VARCHAR},
        </if> 
        <if test="columnDataType != null">
          `column_data_type` = #{columnDataType,jdbcType=VARCHAR},
        </if> 
        <if test="columnMaxLength != null">
          `column_max_length` = #{columnMaxLength,jdbcType=VARCHAR},
        </if> 
        <if test="indexName != null">
          `index_name` = #{indexName,jdbcType=VARCHAR},
        </if> 
        <if test="extra != null">
          `extra` = #{extra,jdbcType=VARCHAR},
        </if> 
        <if test="columnComment != null">
          `column_comment` = #{columnComment,jdbcType=VARCHAR},
        </if> 
        <if test="fieldName != null">
          `field_name` = #{fieldName,jdbcType=VARCHAR},
        </if> 
        <if test="fieldDataType != null">
          `field_data_type` = #{fieldDataType,jdbcType=VARCHAR},
        </if> 
        <if test="required != null">
          `required` = #{required,jdbcType=VARCHAR},
        </if> 
        <if test="primaryKeyFlag != null">
          `primary_key_flag` = #{primaryKeyFlag,jdbcType=VARCHAR},
        </if> 
        <if test="whereType != null">
          `where_type` = #{whereType,jdbcType=VARCHAR},
        </if> 
        <if test="jdbcType != null">
          `jdbc_type` = #{jdbcType,jdbcType=VARCHAR},
        </if>
        <if test="selected != null">
            `selected` = #{selected,jdbcType=INTEGER},
        </if>
    </set>
  </sql>
<!-- list查询  -->
  <select id="selectByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM data_metadata
    <include refid="wherePage" /> <include refid="orderBy" />
  </select>
  <!-- count -->
  <select id="count" resultType="long">
    SELECT count(*) FROM data_metadata <include refid="wherePage" />
  </select>
  <!-- list查询分页  -->
  <select id="selectPageByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM data_metadata
    <include refid="wherePage" />
    <include refid="orderBy" /> <include refid="limit" />
  </select>
  <sql id="wherePrimaryKey">
    `id` = #{id,jdbcType=INTEGER}
  </sql>
  <!-- 主键查询 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM data_metadata WHERE <include refid="wherePrimaryKey" />
  </select>
  <!-- 主键删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM data_metadata WHERE <include refid="wherePrimaryKey" />
  </delete>
  <!-- 根据主键update -->
  <update id="updateByPrimaryKeySelective" parameterType="com.process.entity.generator.DataMetadata">
    UPDATE data_metadata
    <include refid="setUpdate" />
    WHERE <include refid="wherePrimaryKey" />
  </update>
<!-- 动态sql插入 -->
  <insert id="insertSelective"    useGeneratedKeys="true" keyProperty="id"   parameterType="com.process.entity.generator.DataMetadata">
    INSERT INTO data_metadata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        `uuid`,
      </if> 
      <if test="tableUuid != null">
        `table_uuid`,
      </if> 
      <if test="columnName != null">
        `column_name`,
      </if> 
      <if test="defaultValue != null">
        `default_value`,
      </if> 
      <if test="isNullable != null">
        `is_nullable`,
      </if> 
      <if test="columnDataType != null">
        `column_data_type`,
      </if> 
      <if test="columnMaxLength != null">
        `column_max_length`,
      </if> 
      <if test="indexName != null">
        `index_name`,
      </if> 
      <if test="extra != null">
        `extra`,
      </if> 
      <if test="columnComment != null">
        `column_comment`,
      </if> 
      <if test="fieldName != null">
        `field_name`,
      </if> 
      <if test="fieldDataType != null">
        `field_data_type`,
      </if> 
      <if test="required != null">
        `required`,
      </if> 
      <if test="primaryKeyFlag != null">
        `primary_key_flag`,
      </if> 
      <if test="whereType != null">
        `where_type`,
      </if> 
      <if test="jdbcType != null">
        `jdbc_type`,
      </if> 
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if> 
      <if test="tableUuid != null">
        #{tableUuid,jdbcType=VARCHAR},
      </if> 
      <if test="columnName != null">
        #{columnName,jdbcType=VARCHAR},
      </if> 
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if> 
      <if test="isNullable != null">
        #{isNullable,jdbcType=VARCHAR},
      </if> 
      <if test="columnDataType != null">
        #{columnDataType,jdbcType=VARCHAR},
      </if> 
      <if test="columnMaxLength != null">
        #{columnMaxLength,jdbcType=VARCHAR},
      </if> 
      <if test="indexName != null">
        #{indexName,jdbcType=VARCHAR},
      </if> 
      <if test="extra != null">
        #{extra,jdbcType=VARCHAR},
      </if> 
      <if test="columnComment != null">
        #{columnComment,jdbcType=VARCHAR},
      </if> 
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if> 
      <if test="fieldDataType != null">
        #{fieldDataType,jdbcType=VARCHAR},
      </if> 
      <if test="required != null">
        #{required,jdbcType=VARCHAR},
      </if> 
      <if test="primaryKeyFlag != null">
        #{primaryKeyFlag,jdbcType=VARCHAR},
      </if> 
      <if test="whereType != null">
        #{whereType,jdbcType=VARCHAR},
      </if> 
      <if test="jdbcType != null">
        #{jdbcType,jdbcType=VARCHAR},
      </if> 
    </trim>
  </insert>
<!-- 批量插入  -->
  <insert id="insertBatch"   useGeneratedKeys="true" keyProperty="id"   parameterType="java.util.List">
    INSERT INTO data_metadata
    (
      `id` ,
      `uuid` ,
      `table_uuid` ,
      `column_name` ,
      `default_value` ,
      `is_nullable` ,
      `column_data_type` ,
      `column_max_length` ,
      `index_name` ,
      `extra` ,
      `column_comment` ,
      `field_name` ,
      `field_data_type` ,
      `required` ,
      `primary_key_flag` ,
      `where_type` ,
      `jdbc_type` 
    )
    VALUES
    <foreach collection ="list" item="item" separator =",">
      (
#{item.id,jdbcType=INTEGER},
#{item.uuid,jdbcType=VARCHAR},
#{item.tableUuid,jdbcType=VARCHAR},
#{item.columnName,jdbcType=VARCHAR},
#{item.defaultValue,jdbcType=VARCHAR},
#{item.isNullable,jdbcType=VARCHAR},
#{item.columnDataType,jdbcType=VARCHAR},
#{item.columnMaxLength,jdbcType=VARCHAR},
#{item.indexName,jdbcType=VARCHAR},
#{item.extra,jdbcType=VARCHAR},
#{item.columnComment,jdbcType=VARCHAR},
#{item.fieldName,jdbcType=VARCHAR},
#{item.fieldDataType,jdbcType=VARCHAR},
#{item.required,jdbcType=VARCHAR},
#{item.primaryKeyFlag,jdbcType=VARCHAR},
#{item.whereType,jdbcType=VARCHAR},
#{item.jdbcType,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <select id="selectByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM data_metadata WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUuid" parameterType="java.lang.String">
    DELETE FROM data_metadata WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </delete>
  <update id="updateByUuid" parameterType="com.process.entity.generator.DataMetadata">
    UPDATE data_metadata
    <include refid="setUpdate" />
    WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByTableUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM data_metadata WHERE `table_uuid` = #{tableUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByTableUuid" parameterType="java.lang.String">
    DELETE FROM data_metadata WHERE `table_uuid` = #{tableUuid,jdbcType=VARCHAR}
  </delete>
</mapper>