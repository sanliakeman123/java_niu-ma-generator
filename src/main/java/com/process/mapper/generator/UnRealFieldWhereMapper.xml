<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.process.dao.generator.UnRealFieldWhereDao">
<!-- 牛马 工具生成 -->
  <resultMap id="BaseResultMap" type="com.process.entity.generator.UnRealFieldWhere"> 
    <id column="id" jdbcType="INTEGER" property="id" />     
    <result column="jdbc_type" jdbcType="VARCHAR" property="jdbcType" />
    <result column="un_real_table_sub_uuid" jdbcType="VARCHAR" property="unRealTableSubUuid" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="where_type" jdbcType="INTEGER" property="whereType" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="real_field_uuid" jdbcType="VARCHAR" property="realFieldUuid" />
    
  </resultMap>
<!--  -->
  <sql id="Base_Column_List">
      `jdbc_type` ,
      `un_real_table_sub_uuid` ,
      `alias` ,
      `where_type` ,
      `default_value` ,
      `id` ,
      `uuid` ,
      `real_field_uuid` 
  </sql>
  <sql id="orderBy">
    ORDER BY `id` DESC
  </sql>
<!-- and basis_name like CONCAT("%", #{expert.basisName,jdbcType=VARCHAR}, "%")-->
  <sql id="wherePage">
    <where>
      <if test="entity != null"> 
        <if test="entity.jdbcType != null">
          AND `jdbc_type`=#{entity.jdbcType,jdbcType=VARCHAR}
        </if>

        <if test="entity.unRealTableSubUuid != null">
          AND `un_real_table_sub_uuid`=#{entity.unRealTableSubUuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.alias != null">
          AND `alias`=#{entity.alias,jdbcType=VARCHAR}
        </if>

        <if test="entity.whereType != null">
          AND `where_type`=#{entity.whereType,jdbcType=INTEGER}
        </if>

        <if test="entity.defaultValue != null">
          AND `default_value`=#{entity.defaultValue,jdbcType=VARCHAR}
        </if>


        <if test="entity.uuid != null">
          AND `uuid`=#{entity.uuid,jdbcType=VARCHAR}
        </if>

        <if test="entity.realFieldUuid != null">
          AND `real_field_uuid`=#{entity.realFieldUuid,jdbcType=VARCHAR}
        </if>

      </if>
    </where>
  </sql>

  <sql id="limit">
    limit #{page.offset,jdbcType=INTEGER} , #{page.pageSize,jdbcType=INTEGER}
  </sql>
  <sql id="setUpdate">
    <set> 
        <if test="jdbcType != null">
          `jdbc_type` = #{jdbcType,jdbcType=VARCHAR},
        </if> 
        <if test="unRealTableSubUuid != null">
          `un_real_table_sub_uuid` = #{unRealTableSubUuid,jdbcType=VARCHAR},
        </if> 
        <if test="alias != null">
          `alias` = #{alias,jdbcType=VARCHAR},
        </if> 
        <if test="whereType != null">
          `where_type` = #{whereType,jdbcType=INTEGER},
        </if> 
        <if test="defaultValue != null">
          `default_value` = #{defaultValue,jdbcType=VARCHAR},
        </if> 
        <if test="uuid != null">
          `uuid` = #{uuid,jdbcType=VARCHAR},
        </if> 
        <if test="realFieldUuid != null">
          `real_field_uuid` = #{realFieldUuid,jdbcType=VARCHAR},
        </if> 
    </set>
  </sql>
<!-- list查询  -->
  <select id="selectByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_field_where
    <include refid="wherePage" /> <include refid="orderBy" />
  </select>
  <!-- count -->
  <select id="count" resultType="long">
    SELECT count(*) FROM un_real_field_where <include refid="wherePage" />
  </select>
  <!-- list查询分页  -->
  <select id="selectPageByOther" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_field_where
    <include refid="wherePage" />
    <include refid="orderBy" /> <include refid="limit" />
  </select>
  <sql id="wherePrimaryKey">
    `id` = #{id,jdbcType=INTEGER}
  </sql>
  <!-- 主键查询 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_field_where WHERE <include refid="wherePrimaryKey" />
  </select>

  <!-- 主键删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM un_real_field_where WHERE <include refid="wherePrimaryKey" />
  </delete>
  <!-- 根据主键update -->
  <update id="updateByPrimaryKeySelective" parameterType="com.process.entity.generator.UnRealFieldWhere">
    UPDATE un_real_field_where
    <include refid="setUpdate" />
    WHERE <include refid="wherePrimaryKey" />
  </update>
<!-- 动态sql插入 -->
  <insert id="insertSelective"    useGeneratedKeys="true" keyProperty="id"   parameterType="com.process.entity.generator.UnRealFieldWhere">
    INSERT INTO un_real_field_where
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jdbcType != null">
        `jdbc_type`,
      </if> 
      <if test="unRealTableSubUuid != null">
        `un_real_table_sub_uuid`,
      </if> 
      <if test="alias != null">
        `alias`,
      </if> 
      <if test="whereType != null">
        `where_type`,
      </if> 
      <if test="defaultValue != null">
        `default_value`,
      </if> 
      <if test="uuid != null">
        `uuid`,
      </if> 
      <if test="realFieldUuid != null">
        `real_field_uuid`,
      </if> 
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jdbcType != null">
        #{jdbcType,jdbcType=VARCHAR},
      </if> 
      <if test="unRealTableSubUuid != null">
        #{unRealTableSubUuid,jdbcType=VARCHAR},
      </if> 
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if> 
      <if test="whereType != null">
        #{whereType,jdbcType=INTEGER},
      </if> 
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if> 
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if> 
      <if test="realFieldUuid != null">
        #{realFieldUuid,jdbcType=VARCHAR},
      </if> 
    </trim>
  </insert>
<!-- 批量插入  -->
  <insert id="insertBatch"   useGeneratedKeys="true" keyProperty="id"   parameterType="java.util.List">
    INSERT INTO un_real_field_where
    (
      `jdbc_type` ,
      `un_real_table_sub_uuid` ,
      `alias` ,
      `where_type` ,
      `default_value` ,
      `id` ,
      `uuid` ,
      `real_field_uuid` 
    )
    VALUES
    <foreach collection ="list" item="item" separator =",">
      (
#{item.jdbcType,jdbcType=VARCHAR},

#{item.unRealTableSubUuid,jdbcType=VARCHAR},

#{item.alias,jdbcType=VARCHAR},

#{item.whereType,jdbcType=INTEGER},

#{item.defaultValue,jdbcType=VARCHAR},

#{item.id,jdbcType=INTEGER},

#{item.uuid,jdbcType=VARCHAR},

#{item.realFieldUuid,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <select id="selectByUnRealTableSubUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_field_where WHERE `un_real_table_sub_uuid` = #{unRealTableSubUuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUnRealTableSubUuid" parameterType="java.lang.String">
    DELETE FROM un_real_field_where WHERE `un_real_table_sub_uuid` = #{unRealTableSubUuid,jdbcType=VARCHAR}
  </delete>
  <select id="selectByUuid" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM un_real_field_where WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByUuid" parameterType="java.lang.String">
    DELETE FROM un_real_field_where WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </delete>
  <update id="updateByUuid" parameterType="com.process.entity.generator.UnRealFieldWhere">
    UPDATE un_real_field_where
    <include refid="setUpdate" />
    WHERE `uuid` = #{uuid,jdbcType=VARCHAR}
  </update>


</mapper>