INSERT INTO `template_config` VALUES (1,'a0207a2a-313d-40ba-9b00-651ed1a65ec9','实体类模板','com.sszt.process.lettersalverify.entity','','package ${namespace};\nimport java.util.Date;\n/**\n* ${tableRemarks}\n* @author 牛马\n*/\npublic class ${entityName}{\n#foreach( $field in $fieldList)\n  /**\n * ${field.columnDataType}(${field.columnMaxLength})\n * ${field.columnComment}\n  */\n  private ${field.fieldDataType} ${field.fieldName};\n#end\n\n#foreach( $field in $fieldList)\n /**\n * ${field.columnDataType}(${field.columnMaxLength})\n * ${field.columnComment}\n  */\n  public ${field.fieldDataType} get${strUtil.firstCharToUp(${field.fieldName})}(){\n    return ${field.fieldName};\n  }\n /**\n * ${field.columnDataType}(${field.columnMaxLength})\n * ${field.columnComment}\n  */\n  public ${entityName} set${strUtil.firstCharToUp(${field.fieldName})}(${field.fieldDataType} ${field.fieldName}){\n#if (${field.fieldDataType} == \"String\" )\n   this.${field.fieldName} = ${field.fieldName} == null ? null : ${field.fieldName}.trim();\n#else\n   this.${field.fieldName} = ${field.fieldName};\n#end\n   return this;\n  }\n#end\n\n public ${entityName}() {}\n\n public ${entityName}(${entityName} ${strUtil.firstCharToLow(${entityName})}) {\n#foreach ($field in $fieldList)\n   this.${field.fieldName} = ${strUtil.firstCharToLow(${entityName})}.${field.fieldName};\n#end\n  }\n /**\n * 清空对象\n  */\n  public ${entityName} setEmpty(){\n#foreach ($field in $fieldList)\n   this.${field.fieldName} = null;\n#end\n   return this;\n  }\n}','.java'),(2,'4e93adb6-db4c-408b-a974-dc8f490e8b22','dao模板','com.sszt.process.lettersalverify','com.sszt.datasource.lettersalverify','#set( ${daoNamespace} = ${sourceNamespace} + \".dao\" )\n#set( ${entityNamespace} = ${namespace} + \".entity.\" + ${entityName} )\npackage ${daoNamespace};\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport ${entityNamespace};\nimport com.sszt.common.PageQuery;\n/**\n * @author 牛马\n * @version 1.0\n */\n@Mapper\npublic interface ${entityName}Dao {\n#set($num=0)\n#foreach( $fields in $fieldList )##\n#if($fields.primaryKeyFlag == \'true\' )##\n#if(${num}==0)\n    /** $num\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * @return 返回影响行数\n    * */\n    int deleteByPrimaryKey(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    ${entityName} selectByPrimaryKey(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    int updateByPrimaryKeySelective(${entityName} entity); \n#else \n    /** $num\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * @return 返回影响行数\n    * */\n    int deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    int updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity); \n#end##\n#set($num=$num+1)\n#end##\n#end##\n    /**\n    * 新增一条数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    int insertSelective(${entityName} entity);\n\n    /**\n    * 查询数据列表\n    * @param entity 实体类\n    * @return 返回查询数据列表\n    * */\n    List<${entityName}> selectByOther(@Param(value = \"entity\") ${entityName} entity);\n\n    /**\n    * 批量插入\n    * @param list 实体类列表\n    * @return 返回影响行数\n    * */\n    int insertBatch(List<${entityName}> list);\n\n    /**\n    * 统计符合实体条件的数据量结合selectPageByOther分页使用\n    * @param entity 实体类\n    * @return 返回符合数据量\n    * */\n    long count(@Param(value = \"entity\") ${entityName} entity);\n\n    /**\n    * 分页查询数据\n    * @param entity 实体类\n    * @param page 分页参数\n    * @return 返回查询数据列表\n    * */\n    List<${entityName}> selectPageByOther(@Param(value = \"entity\") ${entityName} entity,@Param(value = \"page\") PageQuery page);\n\n#foreach ($fields in $fieldList)##\n#if ($fields.whereType == 4 )##\n    /**\n    * 根据${fields.fieldName}查询数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据\n    */\n    ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})} (${fields.fieldDataType} ${fields.fieldName});\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回影响行数\n    * */\n    int deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n\n    /**\n    * 根据${fields.fieldName}修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    int updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity);\n#elseif ( $fields.whereType == 5 ||  $fields.whereType == 6 )##\n    /**\n    * 根据${fields.fieldName}查询数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据列表\n    */\n    List<${entityName}> selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回影响行数\n    * */\n    int deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n#end## \n#end##\n\n#foreach ($combination in $combinationList)\n    /**\n    * ${combination.parent.describe}\n    * @param entity 实体类\n    * @return 返回查询数据\n    * */\n#if ( ${combination.parent.resType} == 0 ) ${entityName} #else List<${entityName}> #end selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name} )})}(${entityName} entity);\n#end\n\n}','Dao.java'),(3,'a07094c3-4a80-4ed7-aed3-8cfcc598d416','mapper模板','com.sszt.process.lettersalverify','com.sszt.datasource.lettersalverify','#set( ${daoClassName} = ${sourceNamespace} + \".dao.\" + ${entityName} + \"Dao\" )\n#set( ${entityClassName} = ${namespace} + \".entity.\" + ${entityName} )\n#set( ${simpleColumnList} = \"Simple_Column_List\" )\n#set( ${allColumnList} = \"All_Column_List\" )\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${daoClassName}\">\n<!-- 牛马 工具生成 -->\n  <resultMap id=\"BaseResultMap\" type=\"${entityClassName}\"> \n#foreach($fields in $fieldList) \n#if($fields.primaryKeyFlag == \'true\')## \n    <id column=\"${fields.columnName}\" jdbcType=\"${fields.jdbcType}\" property=\"${fields.fieldName}\" />     \n#end## \n#end##\n#foreach($fields in $fieldList) \n#if($fields.primaryKeyFlag != \'true\')## \n    <result column=\"${fields.columnName}\" jdbcType=\"${fields.jdbcType}\" property=\"${fields.fieldName}\" />\n#end## \n#end##\n    \n  </resultMap>\n<!--  -->\n\n  <sql id=\"${allColumnList}\">\n#foreach($fields in $fieldList)\n      `${fields.columnName}` #if ( $foreach.hasNext ),#end\n#end\n  </sql>\n\n  <sql id=\"${simpleColumnList}\">\n#foreach($fields in $simpleFields)\n      `${fields.columnName}` #if ( $foreach.hasNext ),#end\n#end\n  </sql>\n  <sql id=\"orderBy\">\n#foreach ( $fields in $fieldList )##\n#if( $fields.primaryKeyFlag == \'true\'  && $fields.fieldDataType == \"Integer\" )## \n    ORDER BY `${fields.columnName}` DESC\n#end##\n#end##\n  </sql>\n<!-- and basis_name like CONCAT(\"%\", #{expert.basisName,jdbcType=VARCHAR}, \"%\")-->\n  <sql id=\"wherePage\">\n    <where>\n      <if test=\"entity != null\"> \n#foreach($fields in $fieldList)#if($fields.primaryKeyFlag != \'true\')\n        <if test=\"entity.${fields.fieldName} != null\">\n#if( $fields.whereType == 0 )\n          AND `${fields.columnName}`=#{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}\n#elseif( $fields.whereType == 1)\n          AND `${fields.columnName}` LIKE CONCAT(\"%\", #{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}, \"%\")\n#elseif( $fields.whereType == 2 )\n          AND FIND_IN_SET(`${fields.columnName}`, #{entity.${fields.fieldName},jdbcType=${fields.jdbcType}})\n#elseif( $fields.whereType == 3 )\n          AND FIND_IN_SET(#{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}, `${fields.columnName}`)\n#elseif( $fields.whereType == 4 )\n          AND `${fields.columnName}`=#{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}\n#elseif( $fields.whereType == 5 )\n          AND `${fields.columnName}`=#{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}\n#elseif( $fields.whereType == 6 )\n          AND FIND_IN_SET(`${fields.columnName}`, #{entity.${fields.fieldName},jdbcType=${fields.jdbcType}})\n#elseif( $fields.whereType == 7 )\n          AND `${fields.columnName}` > #{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}\n#elseif( $fields.whereType == 8 )\n          AND `${fields.columnName}` < #{entity.${fields.fieldName},jdbcType=${fields.jdbcType}}\n#end\n        </if>\n#end\n#end\n      </if>\n    </where>\n  </sql>\n\n  <sql id=\"limit\">\n    limit #{page.offset,jdbcType=INTEGER} , #{page.pageSize,jdbcType=INTEGER}\n  </sql>\n  <sql id=\"setUpdate\">\n    <set> \n#foreach ( $fields in $fieldList )\n#if( $fields.primaryKeyFlag != \'true\' && $fields.defaultValue != \"CURRENT_TIMESTAMP\")\n        <if test=\"${fields.fieldName} != null\">\n          `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}},\n        </if> \n#end\n#end\n    </set>\n  </sql>\n<!-- list查询  -->\n  <select id=\"selectByOther\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName}\n    <include refid=\"wherePage\" /> <include refid=\"orderBy\" />\n  </select>\n  <!-- count -->\n  <select id=\"count\" resultType=\"long\">\n    SELECT count(*) FROM ${tableName} <include refid=\"wherePage\" />\n  </select>\n  <!-- list查询分页  -->\n  <select id=\"selectPageByOther\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName}\n    <include refid=\"wherePage\" />\n    <include refid=\"orderBy\" /> <include refid=\"limit\" />\n  </select>\n#set($num=0)\n#foreach ( $fields in $fieldList )\n#if( $fields.primaryKeyFlag == \'true\' )\n#if(${num}==0)\n  <sql id=\"wherePrimaryKey\">\n    `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </sql>\n  <!-- 主键查询 -->\n  <select id=\"selectByPrimaryKey\" parameterType=\"java.lang.${fields.fieldDataType}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName} WHERE <include refid=\"wherePrimaryKey\" />\n  </select>\n\n  <!-- 主键删除 -->\n  <delete id=\"deleteByPrimaryKey\" parameterType=\"java.lang.${fields.fieldDataType}\">\n    DELETE FROM ${tableName} WHERE <include refid=\"wherePrimaryKey\" />\n  </delete>\n  <!-- 根据主键update -->\n  <update id=\"updateByPrimaryKeySelective\" parameterType=\"${entityClassName}\">\n    UPDATE ${tableName}\n    <include refid=\"setUpdate\" />\n    WHERE <include refid=\"wherePrimaryKey\" />\n  </update>\n#else\n  <sql id=\"where${strUtil.firstCharToUp(${fields.fieldName})}\">\n    `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </sql>\n  <!-- 主键查询 -->\n  <select id=\"selectBy${strUtil.firstCharToUp(${fields.fieldName})}\" parameterType=\"java.lang.${fields.fieldDataType}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName} WHERE <include refid=\"where${strUtil.firstCharToUp(${fields.fieldName})}\" />\n  </select>\n\n  <!-- 主键删除 -->\n  <delete id=\"deleteBy${strUtil.firstCharToUp(${fields.fieldName})}\" parameterType=\"java.lang.${fields.fieldDataType}\">\n    DELETE FROM ${tableName} WHERE <include refid=\"where${strUtil.firstCharToUp(${fields.fieldName})}\" />\n  </delete>\n  <!-- 根据主键update -->\n  <update id=\"updateBy${strUtil.firstCharToUp(${fields.fieldName})}\" parameterType=\"${entityClassName}\">\n    UPDATE ${tableName}\n    <include refid=\"setUpdate\" />\n    WHERE <include refid=\"where${strUtil.firstCharToUp(${fields.fieldName})}\" />\n  </update>\n#end\n#set($num=$num+1)\n#end\n#end\n<!-- 动态sql插入 -->\n  <insert id=\"insertSelective\"  #foreach ( $fields in $fieldList )#if( $fields.primaryKeyFlag == \'true\' && $fields.extra == \"auto_increment\" )  useGeneratedKeys=\"true\" keyProperty=\"${fields.columnName}\"  #end#end parameterType=\"${entityClassName}\">\n    INSERT INTO ${tableName}\n    <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">\n#foreach ( $fields in $fieldList )\n#if ($fields.extra != \'auto_increment\' && $fields.defaultValue != \"CURRENT_TIMESTAMP\")\n      <if test=\"${fields.fieldName} != null\">\n        `${fields.columnName}`,\n      </if> \n#end\n#end\n    </trim>\n    <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">\n#foreach ( $fields in $fieldList )\n#if ($fields.extra != \'auto_increment\' && $fields.defaultValue != \"CURRENT_TIMESTAMP\")\n      <if test=\"${fields.fieldName} != null\">\n        #{${fields.fieldName},jdbcType=${fields.jdbcType}},\n      </if> \n#end\n#end\n    </trim>\n  </insert>\n<!-- 批量插入  -->\n  <insert id=\"insertBatch\" #foreach ( $fields in $fieldList )#if( $fields.primaryKeyFlag == \'true\' && $fields.extra == \"auto_increment\" )  useGeneratedKeys=\"true\" keyProperty=\"${fields.columnName}\"  #end#end parameterType=\"java.util.List\">\n    INSERT INTO ${tableName}\n    (\n#foreach ( $fields in $fieldList )\n      `${fields.columnName}` #if ( $foreach.hasNext ),#end\n#end\n    )\n    VALUES\n    <foreach collection =\"list\" item=\"item\" separator =\",\">\n      (\n#foreach ( $fields in $fieldList )\n#if($fields.required==0 && $fields.indexName != \'PRI\')\n        CASE WHEN #{item.${fields.fieldName},jdbcType=${fields.jdbcType}} IS NULL THEN \n#if($fields.fieldDataType== \'String\')\'#end#if($fields.defaultValue!=\'\' && $fields.fieldDataType== \'Integer\')$fields.defaultValue \n#elseif($fields.fieldDataType== \'Date\') CURRENT_TIMESTAMP #else#end#if($fields.fieldDataType== \'String\')\'#end ELSE #{item.${fields.fieldName},jdbcType=${fields.jdbcType}} END \n#else#{item.${fields.fieldName},jdbcType=${fields.jdbcType}}#end#if( $foreach.hasNext ),\n#end\n#end\n      )\n    </foreach>\n  </insert>\n#foreach ( $fields in $fieldList )\n#if( $fields.whereType == 4 )\n  <select id=\"selectBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName} WHERE `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </select>\n  <delete id=\"deleteBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\">\n    DELETE FROM ${tableName} WHERE `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </delete>\n  <update id=\"updateBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"${entityClassName}\">\n    UPDATE ${tableName}\n    <include refid=\"setUpdate\" />\n    WHERE `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </update>\n#elseif( $fields.whereType == 5  )\n  <select id=\"selectBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName} WHERE `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </select>\n  <delete id=\"deleteBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\">\n    DELETE FROM ${tableName} WHERE `${fields.columnName}` = #{${fields.fieldName},jdbcType=${fields.jdbcType}}\n  </delete>\n#elseif( $fields.whereType == 6  )\n  <select id=\"selectBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName} WHERE FIND_IN_SET(`${fields.columnName}`, #{${fields.fieldName},jdbcType=${fields.jdbcType}})\n  </select> \n  <delete id=\"deleteBy${strUtil.firstCharToUp( $fields.fieldName )}\" parameterType=\"java.lang.${fields.fieldDataType}\">\n    DELETE FROM ${tableName} WHERE FIND_IN_SET(`${fields.columnName}`, #{${fields.fieldName},jdbcType=${fields.jdbcType}})\n  </delete>\n#end\n#end\n\n#foreach ($combination in $combinationList)\n#set($num=0)\n  <select id=\"selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name})})}\" parameterType=\"${entityClassName}\" resultMap=\"BaseResultMap\">\n    SELECT <include refid=\"${simpleColumnList}\" /> FROM ${tableName}\n    WHERE \n#foreach ($conbinationSelect in $combination.sons)\n#if($num != 0)AND#end \n#if(${conbinationSelect.whereType} == 0) `${conbinationSelect.fieldName}` =  #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}\n#elseif(${conbinationSelect.whereType} == 1) `${conbinationSelect.fieldName}` LIKE CONCAT(\"%\", #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}, \"%\")\n#elseif(${conbinationSelect.whereType} == 2) FIND_IN_SET(`${conbinationSelect.fieldName}`, #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}})\n#elseif(${conbinationSelect.whereType} == 3) FIND_IN_SET(#{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}, `${conbinationSelect.fieldName}`,)\n#elseif(${conbinationSelect.whereType} == 4) `${conbinationSelect.fieldName}` &gt;  #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}\n#elseif(${conbinationSelect.whereType} == 5) `${conbinationSelect.fieldName}` &ge;  #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}\n#elseif(${conbinationSelect.whereType} == 6) `${conbinationSelect.fieldName}` &lt;  #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}\n#elseif(${conbinationSelect.whereType} == 7) `${conbinationSelect.fieldName}` &le;  #{${strUtil.tToe(${conbinationSelect.fieldName})},jdbcType=${conbinationSelect.jdbcType}}\n#elseif(${conbinationSelect.whereType} == 8) `${conbinationSelect.fieldName}` =  #if(${conbinationSelect.jdbcType} == \'VARCHAR\' || ${conbinationSelect.jdbcType} == \'TIMESTAMP\')\'#end${conbinationSelect.defaultValue}#if(${conbinationSelect.jdbcType} == \'VARCHAR\' || ${conbinationSelect.jdbcType} == \'TIMESTAMP\')\'#end\n#end\n#set($num=$num+1)\n#end\n  </select>\n\n#end\n\n</mapper>','Mapper.xml'),(4,'dcc5eccf-31e6-427f-82af-2c1038630783','service 模板','com.sszt.process.xingtai','com.sszt.datasource.xingtai','#set( ${selfNamespace} = ${namespace} + \".service\" )\n#set( ${entityNamespace} = ${namespace} + \".entity.\" + ${entityName} )\npackage ${selfNamespace};\nimport ${entityNamespace};\nimport com.sszt.common.PageInfo;\nimport com.sszt.common.PageQuery;\nimport java.util.List;\npublic interface ${entityName}Service {\n\n    /**\n    * 分页返回数据 （原始数据）\n    * @param query 筛选条件 where条件使用\n    * @param pageQuery 筛选条件 limit 条件使用\n    * */\n    PageInfo<${entityName}> page(${entityName} query, PageQuery pageQuery);\n\n    /**\n    * 返回数据 （原始数据）\n    * @param query 筛选条件 where条件使用\n    * \n    * */\n    List<${entityName}> list(${entityName} query);\n\n    /**\n    * 新增/修改数据 \n    * @param entity 实体类\n    *\n    * */\n    void save(${entityName} entity);\n#set($num=0)\n#foreach( $fields in $fieldList )\n#if($fields.primaryKeyFlag == \'true\' )\n#if($num==0)\n    /**\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * @return 返回影响行数\n    *\n    * */\n    void deleteByPrimaryKey(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    ${entityName} selectByPrimaryKey(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    void updateByPrimaryKeySelective(${entityName} entity);\n#else\n    /**\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * @return 返回影响行数\n    *\n    * */\n    void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey);\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    void updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity);\n#end\n#set($num=$num+1)\n#end\n#end\n#foreach ($fields in $fieldList)\n#if($fields.whereType == 4 )\n    /**\n    * 根据${fields.fieldName}查询数据(数据库)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据\n    */\n    ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回影响行数\n    * */\n    void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n    /**\n    * 根据${fields.fieldName}修改数据\n    * @param entity 实体类\n    * @return 返回影响行数\n    * */\n    void updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity);\n#elseif ($fields.whereType == 5  ||  $fields.whereType == 6)\n    /**\n    * 根据${fields.fieldName}查询数据(后台)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据列表\n    */\n    List<${entityName}> selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回影响行数\n    * */\n    void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName});\n#end\n#end\n\n#foreach ($combination in $combinationList)\n    /**\n    * ${combination.parent.describe}\n    * @param entity 实体类\n    * @return 返回查询数据\n    * */\n#if ( ${combination.parent.resType} == 0 ) ${entityName} #else List<${entityName}> #end selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name})})}(${entityName} entity);\n#end\n\n}','Service.java'),(5,'95755a39-e585-4e48-8ece-13c67cc5878b','serviceImpl 模板','com.sszt.process.xingtai','com.sszt.datasource.xingtai','#set( ${serviceNamespace} = ${namespace} + \".service\" )\n#set( ${selfNamespace} = ${serviceNamespace} + \".impl\" )\n#set( ${serviceClassName} = ${serviceNamespace} + \".\" + ${entityName} + \"Service\" )\n#set( ${entityClassName} = ${namespace} + \".entity.\" + ${entityName} )\n#set( ${daoClassName} = ${sourceNamespace} + \".dao.\" + ${entityName} + \"Dao\" )\npackage ${selfNamespace};\n\nimport ${entityClassName};\nimport com.sszt.common.PageInfo;\nimport com.sszt.common.PageQuery;\nimport ${daoClassName};\nimport ${serviceClassName};\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport java.util.List;\nimport javax.annotation.Resource;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.UUID;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n@Service\npublic class ${entityName}ServiceImpl implements ${entityName}Service{\n\n    private static final Logger log = LoggerFactory.getLogger(${entityName}ServiceImpl.class);\n\n    @Resource\n    ${entityName}Dao dao;\n\n    /**\n    * 分页查询数据 \n    * @param query 筛选条件\n    * @param pageQuery 分页条件\n    *    \n    */\n    @Override\n    public PageInfo<${entityName}> page(${entityName} query, PageQuery pageQuery){\n        log.info(\"${entityName}ServiceImpl-page: query: {}, pageQuery: {}\",query,pageQuery);\n        long total = dao.count(query);\n        if( total == 0L ){\n            return new PageInfo<>(new ArrayList<>(), total);\n        }\n        List<${entityName}> list = dao.selectPageByOther(query, pageQuery.make());\n        log.info(\"${entityName}ServiceImpl-page: list: {}\",list);\n        return new PageInfo<>(list,total);\n    }\n    /**\n    * 返回数据 （原始数据）\n    * @param query 筛选条件 where条件使用\n    * \n    * */\n    @Override\n    public List<${entityName}> list(${entityName} query){\n        log.info(\"${entityName}ServiceImpl-list: query: {}\",query);\n        return dao.selectByOther(query);\n    }\n    /**\n    * 新增/修改数据 \n    * @param entity 实体类\n    *\n    * */\n    @Override\n    public void save(${entityName} entity) {\n        /**\n        String uuid = entity.getUuid();\n\n        if( uuid == null || uuid.length()==0 || uuid.equals(\"null\")){\n            dao.insertSelective( entity.setUuid( UUID.randomUUID().toString() ) );\n        }else{\n            dao.updateByUuid(entity);\n        }\n        */\n        \n    }\n#set($num=0)\n#foreach( $fields in $fieldList )\n#if($fields.primaryKeyFlag == \'true\' )\n#if($num==0)\n    /**\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * */\n    @Override\n    public void deleteByPrimaryKey(${fields.fieldDataType} primaryKey){\n        log.info(\"${entityName}ServiceImpl-deleteByPrimaryKey: primaryKey: {}\",primaryKey);\n        dao.deleteByPrimaryKey(primaryKey);\n    }\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    @Override\n    public ${entityName} selectByPrimaryKey(${fields.fieldDataType} primaryKey){\n        log.info(\"${entityName}ServiceImpl-selectByPrimaryKey: primaryKey: {}\",primaryKey);\n        return dao.selectByPrimaryKey(primaryKey);\n    }\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * */\n    @Override\n    public void updateByPrimaryKeySelective(${entityName} entity){\n        log.info(\"${entityName}ServiceImpl-updateByPrimaryKeySelective: entity: {}\",entity);\n        dao.updateByPrimaryKeySelective(entity);\n    } \n#else\n    /**\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * */\n    @Override\n    public void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey){\n        log.info(\"${entityName}ServiceImpl-deleteBy${strUtil.firstCharToUp(${fields.fieldName})}: primaryKey: {}\",primaryKey);\n        dao.deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(primaryKey);\n    }\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    @Override\n    public ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} primaryKey){\n        log.info(\"${entityName}ServiceImpl-selectBy${strUtil.firstCharToUp(${fields.fieldName})}: primaryKey: {}\",primaryKey);\n        return dao.selectBy${strUtil.firstCharToUp(${fields.fieldName})}(primaryKey);\n    }\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * */\n    @Override\n    public void updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity){\n        log.info(\"${entityName}ServiceImpl-updateBy${strUtil.firstCharToUp(${fields.fieldName})}: entity: {}\",entity);\n        dao.updateBy${strUtil.firstCharToUp(${fields.fieldName})}(entity);\n    } \n#end\n#set($num=$num+1)\n#end\n#end\n#foreach ($fields in $fieldList)\n#if ($fields.whereType == 4 )\n    /**\n    * 根据${fields.fieldName}查询数据(后台)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据\n    */\n    @Override\n    public ${entityName} selectBy${strUtil.firstCharToUp(${fields.fieldName})} (${fields.fieldDataType} ${fields.fieldName}){\n        log.info(\"${entityName}ServiceImpl-selectBy${strUtil.firstCharToUp(${fields.fieldName})}: ${fields.fieldName}: {}\",${fields.fieldName});\n        return dao.selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName});\n    }\n\n\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * */\n    @Override\n    public void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName}){\n        log.info(\"${entityName}ServiceImpl-deleteBy${strUtil.firstCharToUp(${fields.fieldName})}: ${fields.fieldName}: {}\",${fields.fieldName});\n        dao.deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName});\n    }\n\n    /**\n    * 根据${fields.fieldName}修改数据\n    * @param entity 实体类\n    * */\n    @Override\n    public void updateBy${strUtil.firstCharToUp(${fields.fieldName})}(${entityName} entity){\n        log.info(\"${entityName}ServiceImpl-updateBy${strUtil.firstCharToUp(${fields.fieldName})}: entity: {}\",entity);\n        dao.updateBy${strUtil.firstCharToUp(${fields.fieldName})}(entity);\n    }\n\n#elseif ($fields.whereType == 5 || $fields.whereType == 6 )\n    /**\n    * 根据${fields.fieldName}查询数据(后台)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据列表\n    */\n    @Override\n    public List<${entityName}> selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName}){\n        log.info(\"${entityName}ServiceImpl-selectBy${strUtil.firstCharToUp(${fields.fieldName})}: ${fields.fieldName}: {}\",${fields.fieldName});\n        return dao.selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName});\n    }\n\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * */\n    @Override\n    public void deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldDataType} ${fields.fieldName}){\n        log.info(\"${entityName}ServiceImpl-deleteBy${strUtil.firstCharToUp(${fields.fieldName})}: ${fields.fieldName}: {}\",${fields.fieldName});\n        dao.deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName});\n    }\n#end\n#end\n#foreach ($combination in $combinationList)\n    /**\n    * ${combination.parent.describe}\n    * @param entity 实体类\n    * @return 返回查询数据\n    * */\n    @Override\n    public #if ( ${combination.parent.resType} == 0 ) ${entityName} #else List<${entityName}> #end selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name})})}(${entityName} entity){\n        log.info(\"${entityName}ServiceImpl-selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name})})}: ${entityName}: {}\",entity);\n        return dao.selectBy${strUtil.firstCharToUp(${strUtil.tToe(${combination.parent.name})})}(entity);\n    }\n#end\n}','ServiceImpl.java'),(6,'c7e9d0fb-8284-4d88-970b-662096d931c0','controller模板','com.process',NULL,'#set( ${selfNamespace} = ${namespace} + \".controller.generator\" )\n#set( ${entityClassName} = ${namespace} + \".entity.generator.\" + ${entityName} )\n#set( ${serviceClassName} = ${namespace} + \".service.generator.\" + ${entityName} + \"Service\" )\n#set( ${commonNamespace} = \"com.common.\" )\npackage ${selfNamespace};\n\nimport ${entityClassName};\nimport ${serviceClassName};\nimport ${commonNamespace}PageInfo;\nimport ${commonNamespace}PageQuery;\nimport ${commonNamespace}Result;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.List;\n\n\n@RestController\n@RequestMapping(value = \"/${strUtil.firstCharToLow(${entityName})}\")\npublic class ${entityName}Controller {\n    private static final Logger log = LoggerFactory.getLogger(${entityName}Controller.class);\n    @Autowired\n    ${entityName}Service service;\n\n    @PostMapping(value = \"/page\")\n    public Result<PageInfo<${entityName}>> page(@RequestBody PageQuery<${entityName}> query){\n        try{\n            return new Result<>(service.page(query.getEntity(),query));\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n    @PostMapping(value = \"/list\")\n    public Result<List<${entityName}>> list(@RequestBody ${entityName} query){\n        try{\n            return new Result<>(service.list(query));\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n    \n\n    @PostMapping(value = \"/save\")\n    public Result<String> save(@RequestBody ${entityName} entity){\n        try{\n            service.save(entity);\n            return new Result<>(\"\");\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n\n#foreach( $fields in $fieldList )\n#if($fields.primaryKeyFlag == \'true\' )\n    /**\n    * 根据主键删除数据\n    * @param primaryKey 主键\n    * */\n    @PostMapping(value = \"/deleteByPrimaryKey\")\n    public Result<String> deleteByPrimaryKey(@RequestParam ${fields.fieldDataType} primaryKey){\n        try{\n            service.deleteByPrimaryKey(primaryKey);\n            return new Result<>(\"\");\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n    /**\n    * 根据主键查询数据\n    * @param primaryKey 主键\n    * @return 返回查询数据\n    * */\n    @PostMapping(value = \"/selectByPrimaryKey\")\n    public Result<${entityName}> selectByPrimaryKey(@RequestParam ${fields.fieldDataType} primaryKey){\n        try{\n            return new Result<>(service.selectByPrimaryKey(primaryKey));\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n    /**\n    * 根据主键修改数据\n    * @param entity 实体类\n    * */\n    @PostMapping(value = \"/updateByPrimaryKeySelective\")\n    public Result<String> updateByPrimaryKeySelective(@RequestBody ${entityName} entity){\n        try{\n            service.updateByPrimaryKeySelective(entity);\n            return new Result<>(\"\");\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n#end\n#end\n\n#foreach ($fields in $fieldList) \n#if ($fields.whereType == 4 )\n    /**\n    * 根据${fields.fieldName}查询数据(后台)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据\n    */\n    @PostMapping(value = \"/selectBy${strUtil.firstCharToUp(${fields.fieldName})}\")\n    public Result<${entityName}> selectBy${strUtil.firstCharToUp(${fields.fieldName})} (@RequestParam ${fields.fieldDataType} ${fields.fieldName}){\n        try{\n            return new Result<>(service.selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName}));\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n    /**\n    * 根据${fields.fieldName}删除数据\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * */\n    @PostMapping(value = \"/deleteBy${strUtil.firstCharToUp(${fields.fieldName})}\")\n    public Result<String> deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(@RequestParam ${fields.fieldDataType} ${fields.fieldName}){\n        try{\n            service.deleteBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName});\n            return new Result<>(\"\");\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n\n    /**\n    * 根据${fields.fieldName}修改数据\n    * @param entity 实体类\n    * */\n    @PostMapping(value = \"/updateBy${strUtil.firstCharToUp(${fields.fieldName})}\")\n    public Result<String> updateBy${strUtil.firstCharToUp(${fields.fieldName})}(@RequestBody ${entityName} entity){\n        try{\n            service.updateBy${strUtil.firstCharToUp(${fields.fieldName})}(entity);\n            return new Result<>(\"\");\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n\n#elseif ($fields.whereType == 5  || $fields.whereType == 6)\n    /**\n    * 根据${fields.fieldName}查询数据(前台)\n    * @param ${fields.fieldName}  ${fields.columnComment}\n    * @return 返回查询数据列表\n    */\n    @PostMapping(value = \"/selectBy${strUtil.firstCharToUp(${fields.fieldName})}\")\n    public Result<List<${entityName}>> selectBy${strUtil.firstCharToUp(${fields.fieldName})} (@RequestParam ${fields.fieldDataType} ${fields.fieldName}){\n        try{\n            return new Result<>(service.selectBy${strUtil.firstCharToUp(${fields.fieldName})}(${fields.fieldName}));\n        }\n        catch (Exception e){\n            return new Result<>(-1,e.getMessage());\n        }\n    }\n#end\n#end\n\n\n}','Controller.java'),(7,'0e5baf85-60ea-4f64-b5ea-f67aed6e5ae5','java字典模板','com.zrs.entity','com.zrs.datasource','package ${namespace};\nimport com.google.common.collect.ImmutableMap;\nimport java.util.Map;\nimport java.util.List;\nimport java.util.HashMap;\nimport org.springframework.stereotype.Service;\nimport javax.annotation.Resource;\n#foreach($item in $tableMap.entrySet())\nimport ${namespace}.entity.${strUtil.firstCharToUp(${strUtil.tToe(${item.key})})};\nimport ${sourceNamespace}.dao.${strUtil.firstCharToUp(${strUtil.tToe(${item.key})})};\n#end\n/*\n* 字典映射 by 牛马\n* */\n@Service\npublic class ${className}{\n#foreach($item in $tableMap.entrySet())\n    @Resource\n    ${strUtil.firstCharToUp(${strUtil.tToe(${item.key})})}Dao ${strUtil.tToe(${item.key})}Dao;\n#end\n\n#foreach( $dict in $dictList)\n#if($dict.parent.type==0)\n    // ${dict.parent.describe} 映射\n    public static final Map<String,String> ${dict.parent.name}_MAP = ImmutableMap.<String,String>builder()\n#foreach( $dictSub in $dict.sons)\n        .put(\"${dictSub.value}\",\"${dictSub.label}\")  \n#end\n        .build();\n#elseif($dict.parent.type==1)\n    // ${dict.parent.describe} 映射\n    public Map<String,String> ${dict.parent.name}Map(${strUtil.firstCharToUp(${strUtil.tToe(${dict.parent.tableName})})} entity){\n        Map<String, String> map = new HashMap<>();\n        List<${strUtil.firstCharToUp(${strUtil.tToe(${dict.parent.tableName})})}> list = ${strUtil.tToe(${dict.parent.tableName})}Dao.select${strUtil.firstCharToUp(${dict.parent.CombinationUuid})}(entity);\n        for (${strUtil.firstCharToUp(${strUtil.tToe(${dict.parent.tableName})})} generator : list) {\n            String key = String.valueOf(generator.get${strUtil.firstCharToUp(${dict.parent.value})}());\n            String value = String.valueOf(generator.get${strUtil.firstCharToUp(${dict.parent.label})}());\n            map.put(key.equals(\"null\")?\"\":key, value.equals(\"null\")?\"\":value);\n        }\n        return map;\n    }\n#end\n#end\n}','Dict.java'),(8,'e4e612dd-1912-4a8d-8760-09a4f0c6da22','联表查询返回字段','com.sszt.process.lettersalverify.vo','','package ${namespace};\nimport java.util.Date;\n/**\n* ${tableRemarks}\n* @author 牛马\n*/\npublic class ${entityName}{\n#foreach( $field in $joinSelectFields)\n  private ${field.javaType} ${strUtil.tToe(${field.alias})};\n#end\n\n#foreach( $field in $joinSelectFields)\n\n  public ${field.javaType} get${strUtil.firstCharToUp(${strUtil.tToe(${field.alias})})}(){\n    return ${strUtil.tToe(${field.alias})};\n }\n\n public ${entityName} set${strUtil.firstCharToUp(${strUtil.tToe(${field.alias})})}(${field.javaType} ${strUtil.tToe(${field.alias})}){\n#if (${field.javaType} == \"String\" )\n   this.${strUtil.tToe(${field.alias})} = ${strUtil.tToe(${field.alias})} == null ? null : ${strUtil.tToe(${field.alias})}.trim();\n#else\n    this.${strUtil.tToe(${field.alias})} = ${strUtil.tToe(${field.alias})};\n#end\n   return this;\n  }\n#end\n\n public ${entityName}() {}\n\n public ${entityName}(${entityName} ${strUtil.firstCharToLow(${entityName})}) {\n#foreach ($field in $joinSelectFields)\n    this.${strUtil.tToe(${field.alias})} = ${strUtil.firstCharToLow(${entityName})}.${strUtil.tToe(${field.alias})};\n#end\n  }\n\n public ${entityName} setEmpty(){\n#foreach ($field in $joinSelectFields)\n    this.${strUtil.tToe(${field.alias})} = null;\n#end\n    return this;\n  }\n}','.java'),(9,'f616cb43-05c6-4165-ba62-a484db819dd0','联表查询dao','com.sszt.process.lettersalverify','com.sszt.datasource.lettersalverify','#set( ${daoNamespace} = ${sourceNamespace} + \".dao\" )\n#set( ${entityNamespace} = ${namespace} + \".vo.\" + ${entityName} )\n#set( ${entityNameQurey} = ${entityName} + \"Query\" )\n\npackage ${daoNamespace};\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport ${entityNamespace};\nimport ${namespace}.query.${entityNameQurey};\nimport com.sszt.common.PageQuery;\n/**\n * @author 牛马\n * @version 1.0\n */\n@Mapper\npublic interface ${entityName}Dao {\n    /**\n    * 查询数据列表\n    * @param entity 实体类\n    * @return 返回查询数据列表\n    * */\n    List<${entityName}> selectByOther(@Param(value = \"entity\") ${entityNameQurey} entity);\n\n    /**\n    * 统计符合实体条件的数据量结合selectPageByOther分页使用\n    * @param entity 实体类\n    * @return 返回符合数据量\n    * */\n    long count(@Param(value = \"entity\") ${entityNameQurey} entity);\n\n    /**\n    * 分页查询数据\n    * @param entity 实体类\n    * @param page 分页参数\n    * @return 返回查询数据列表\n    * */\n    List<${entityName}> selectPageByOther(@Param(value = \"entity\") ${entityNameQurey} entity,@Param(value = \"page\") PageQuery page);\n}','Dao.java'),(10,'e6f16ac6-00a5-4792-9e1c-13a8d096c901','联表查询mapper','com.sszt.process.lettersalverify','com.sszt.datasource.lettersalverify','#set( ${daoClassName} = ${sourceNamespace} + \".dao.\" + ${entityName} + \"Dao\" )\n#set( ${entityClassName} = ${namespace} + \".vo.\" + ${entityName} )\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${daoClassName}\">\n\n    <resultMap id=\"BaseResultMap\" type=\"${namespace}.vo.${entityName}\">\n#foreach( $field in $joinSelectFields)\n      <result column=\"${field.alias}\" jdbcType=\"${field.jdbcType}\" property=\"${strUtil.tToe(${field.alias})}\" />\n#end\n    </resultMap>\n    \n    <sql id=\"Base_Column_List\">\n#foreach( $field in $joinSelectFields)\n      `${field.tableName}`.`${field.fieldName}` `${field.alias}` #if ( $foreach.hasNext ),#end\n#end\n    </sql>\n\n\n    <sql id=\"wherePage\">\n      <where>\n        <if test=\"entity != null\"> \n#foreach( $fieldWhere in $joinWhereFields)\n          <if test=\"entity.${strUtil.tToe(${fieldWhere.fieldName})} != null\"> AND \n#if(${fieldWhere.whereType} == 0) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` =  #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}\n#elseif(${fieldWhere.whereType} == 1) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` LIKE CONCAT(\"%\", #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}, \"%\")\n#elseif(${fieldWhere.whereType} == 2) FIND_IN_SET(`${fieldWhere.tableAlias}`.`${fieldWhere.columnName}`, #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}})\n#elseif(${fieldWhere.whereType} == 3) FIND_IN_SET(#{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}, `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}`,)\n#elseif(${fieldWhere.whereType} == 4) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` >  #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}\n#elseif(${fieldWhere.whereType} == 5) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` >=  #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}\n#elseif(${fieldWhere.whereType} == 6) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` <  #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}\n#elseif(${fieldWhere.whereType} == 7) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` <=  #{entity.${strUtil.tToe(${fieldWhere.fieldName})},jdbcType=${fieldWhere.jdbcType}}\n#elseif(${fieldWhere.whereType} == 9) `${fieldWhere.tableAlias}`.`${fieldWhere.columnName}` is null\n#end\n          </if>\n#end\n        </if>\n      </where>\n    </sql>\n\n    <sql id=\"orderBy\">\n\n    </sql>\n\n    <sql id=\"limit\">\n        LIMIT #{page.offset,jdbcType=INTEGER} , #{page.pageSize,jdbcType=INTEGER}\n    </sql>\n\n    <sql id=\"virutalTable\">\n#set( $num = 0 )\n#foreach( $unRealTable in $joinUnRealTables)\n#if( $num == 0 )\n        `${unRealTable.tableName}` `${unRealTable.alias}` ${unRealTable.joinType} `${unRealTable.joinTableName}` `${unRealTable.joinAlias}` on `${unRealTable.alias}`.`${unRealTable.selfField}` = `${unRealTable.joinAlias}`.`${unRealTable.joinField}`\n#else\n        ${unRealTable.joinType} `${unRealTable.joinTableName}` `${unRealTable.joinAlias}` on `${unRealTable.alias}`.`${unRealTable.selfField}` = `${unRealTable.joinAlias}`.`${unRealTable.joinField}`\n#end\n#set( $num = $num + 1 )\n#end\n    </sql>\n\n    <select id=\"selectPageByOther\" resultMap=\"BaseResultMap\">\n        SELECT\n        <include refid=\"Base_Column_List\" />\n        FROM <include refid=\"virutalTable\" />\n         <include refid=\"wherePage\" />\n        <include refid=\"orderBy\" /> <include refid=\"limit\" />\n    </select>\n\n    <!-- count -->\n    <select id=\"count\" resultType=\"long\">\n        SELECT count(*) FROM <include refid=\"virutalTable\" />\n          <include refid=\"wherePage\" />\n    </select>\n\n        <select id=\"selectByOther\" resultMap=\"BaseResultMap\">\n        SELECT\n        <include refid=\"Base_Column_List\" />\n        FROM <include refid=\"virutalTable\" />\n         <include refid=\"wherePage\" />\n        <include refid=\"orderBy\" />\n    </select>\n\n</mapper>','Mapper.xml'),(11,'c13ba375-2961-4596-9f41-083eadc67417','联表查询 query','com.sszt.process.lettersalverify.query','','#set( ${className} = ${entityName} + \"Query\" )\npackage ${namespace};\nimport java.util.Date;\n/**\n* ${tableRemarks}\n* @author 牛马\n*/\npublic class ${className}{\n#foreach( $field in $joinWhereFields)\n  private ${field.javaType} ${strUtil.tToe(${field.fieldName})};\n#end\n\n#foreach( $field in $joinWhereFields)\n\n public ${field.javaType} get${strUtil.firstCharToUp(${strUtil.tToe(${field.fieldName})})}(){\n    return ${strUtil.tToe(${field.fieldName})};\n }\n\n public ${className} set${strUtil.firstCharToUp(${strUtil.tToe(${field.fieldName})})}(${field.javaType} ${strUtil.tToe(${field.fieldName})}){\n#if (${field.javaType} == \"String\" )\n    this.${strUtil.tToe(${field.fieldName})} = ${strUtil.tToe(${field.fieldName})} == null ? null : ${strUtil.tToe(${field.fieldName})}.trim();\n#else\n    this.${strUtil.tToe(${field.fieldName})} = ${strUtil.tToe(${field.fieldName})};\n#end\n   return this;\n  }\n#end\n\n public ${className}() {}\n\n  public ${className}(${className} ${strUtil.firstCharToLow(${entityName})}) {\n#foreach ($field in $joinWhereFields)\n   this.${strUtil.tToe(${field.fieldName})} = ${strUtil.firstCharToLow(${entityName})}.${strUtil.tToe(${field.fieldName})};\n#end\n  }\n\n public ${className} setEmpty(){\n#foreach ($field in $joinWhereFields)\n    this.${strUtil.tToe(${field.fieldName})} = null;\n#end\n    return this;\n  }\n}','Query.java');
